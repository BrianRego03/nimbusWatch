name: CI/CD

on:
  push:
    branches: ["**"]   # build on every branch
  workflow_dispatch:

env:
  APP_SERVICE: nimbuswatch                       # service name in your compose
  REMOTE_PATH: /srv/nimbusWatcher                # folder on VPS with docker-compose.yml

jobs:
  build:
    name: Build & Push Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Normalize image name
        run: echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Compute tags (latest only on main)
        run: |
          TAGS="${IMAGE_NAME}:${GITHUB_SHA}\n${IMAGE_NAME}:${SHORT_SHA}"
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            TAGS="${TAGS}\n${IMAGE_NAME}:latest"
          fi
          {
            echo "TAGS<<EOF"
            echo -e "$TAGS"
            echo "EOF"
          } >> $GITHUB_ENV

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ env.TAGS }}

  deploy:
    name: Deploy to VPS (main only)
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Setup SSH
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          install -m 700 -d ~/.ssh
          printf "%s" "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p "${SSH_PORT:-22}" -H "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Log into GHCR on the VPS, pull & restart
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          IMAGE:    ${{ env.IMAGE_NAME }}:latest
          GH_ACTOR: ${{ github.actor }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REMOTE:   ${{ env.REMOTE_PATH }}
          SERVICE:  ${{ env.APP_SERVICE }}
        run: |
          ssh -i ~/.ssh/id_ed25519 -p "${SSH_PORT:-22}" "$SSH_USER@$SSH_HOST" "
            set -e
            echo \"\$GH_TOKEN\" | docker login ghcr.io -u \"\$GH_ACTOR\" --password-stdin
            cd \"\$REMOTE\"
            docker compose pull \"\$SERVICE\"
            docker compose up -d
            docker image prune -f
          "