name: CI/CD

on:
  push:
    branches: ["**"]   # build on every branch
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}   # ghcr.io/<owner>/<repo>
  APP_SERVICE: nimbuswatch                       # service name in your compose
  REMOTE_PATH: /srv/nimbusWatcher                # folder on VPS with docker-compose.yml

jobs:
  build:
    name: Build & Push Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write        # allow pushing to GHCR
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push (commit tag + latest on main)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:${{ github.sha[0:7] }}
            ${{ env.IMAGE_NAME }}:latest
          # only tag :latest on main
          # build-push-action can't conditionally tag easily, so we do a second step to clean up if not main
      - name: Remove latest tag if not main
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Not main branch; no stable tag needed."

  deploy:
    name: Deploy to VPS (main only)
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        run: |
          install -m 700 -d ~/.ssh
          printf "%s" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p "${{ secrets.SSH_PORT || 22 }}" -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Log into GHCR on the VPS, pull & restart
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          IMAGE:    ${{ env.IMAGE_NAME }}:latest
          GH_ACTOR: ${{ github.actor }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REMOTE:   ${{ env.REMOTE_PATH }}
          SERVICE:  ${{ env.APP_SERVICE }}
        run: |
          ssh -i ~/.ssh/id_ed25519 -p "${SSH_PORT:-22}" "$SSH_USER@$SSH_HOST" "
            set -e
            echo | docker login ghcr.io -u ${GH_ACTOR} --password-stdin <<< ${GH_TOKEN}
            cd ${REMOTE}
            docker compose pull ${SERVICE}
            docker compose up -d
            docker image prune -f
          "